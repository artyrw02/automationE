// Gets the object type checkbox
function GetCheckbox(cbName){
  var ActiveWindow = Sys.Desktop.ActiveWindow()

  return ActiveWindow["FindChild"](["ClrClassName","Name"], ["EpiCheckBox", "WinFormsObject(\"" + cbName + "\")"], 30)
}

//Changes the state of the checkbox depending of status parameter
function ChangeCheckboxState(cbName, status){
  var checkbox = GetCheckbox(cbName)

  try{
    if (checkbox["Exists"]) {
      checkbox["Checked"] = status
    }else{
      Log["Error"]("Checkbox " + cbName + " was not found.")
    }
  }catch(e){
    LogError(e, e.message)
  }
}

// Gets the object type button
function GetButton(btnName){
  var ActiveWindow = Sys.Desktop.ActiveWindow()

  //To modify
  var objBtn = ActiveWindow["FindChild"](["WndClass","WndCaption"], ["*Button*", btnName], 30)

  if(objBtn["Exists"]){
    return objBtn
  }else{
    return  ActiveWindow["FindChild"](["ClrClassName","WndCaption"], ["*Button*", btnName], 30)
  }
}

//Clicks on button set on the parameter
function ClickButton(btnName) {
  var button = GetButton(btnName)

  try{
    if (button["Exists"]) {
      button["Click"]()
    }else{
      Log["Error"]("Button " + btnName + " was not found.")
    }
  }catch(e){
    LogError(e, e.message)
  }
}

function ClickMenu(menuNamePath){
  var aMenuName = menuNamePath.split("->")

  var ActiveWindow = Sys.Desktop.ActiveWindow()

  var tbDockArea = ActiveWindow["FindChild"]("Name", "*_Toolbars_Dock_Area_Top*", 30)
  
  var menuItems = findToolBar(tbDockArea, aMenuName[0])
        
  if (!menuItems)
    Log["Error"]("Menu item not found - '" + menuName + "'")

  //expand menu from ToolbarManager using DropDown method and get array of item's indexes
  var aItemIndex = expandPopupMenu(menuItems, aMenuName)

  //navigate to the last menu item from UltraToolbarsDockArea extended collection and Click last item
  menuItems = tbDockArea.wItems.Item(aItemIndex[0])
  for (var i = 1; i < aItemIndex.length; i++)        
    menuItems = menuItems.Items.Item(aItemIndex[i])

  menuItems.Click()

  Log["Message"]("Menu clicked - '" + menuNamePath + "'")

}

function findToolBar(tbDockArea, toolText)
{
  //for each toolBar in the <dockArea>
  for ( var b = 0; b < tbDockArea.ToolbarsManager.Toolbars.Count; b++)  {        
      //get current toolbar object
      var bar = tbDockArea.ToolbarsManager.Toolbars.Item(b)
      //trying to find tool with <toolText> ToolTip in the current toolBar
      for ( var t = 0; t < bar.Tools.Count; t++ ) {            
          var tool = bar.Tools.Item(t)
          if (tool.CaptionAsToolTip == toolText)
              return bar
      }        
  }    
  //all toolBars checked. No tool with <toolText> ToolTip found.
  return null
}

function expandPopupMenu(menuItems, aMenuName)
{    
  var aItemIndex = [menuItems.Text.OleValue]
  for(var i in aMenuName){        
      var menuItems = menuItems.Tools
      
      for(var j = 0; j < menuItems.Count 
              && aqString.Trim(menuItems.Item(j).CaptionResolved.OleValue.replace(/[&.]/g, "")) != aqString.Trim(aMenuName[i].replace(/[&.]/g, "")); j++){}        
      
      if (j >= menuItems.Count)                                       
          throw new Error(2, "Menu item not found - '" + aMenuName[i] + "'")
      
      var menuItems = menuItems.Item(j)
      aItemIndex.push(menuItems.CaptionResolved.OleValue)
      
      if (i < aMenuName.length - 1) 
          menuItems.DropDown()
      
      BuiltIn.Delay(100)   //Wait for popup window appears
  }    
  return aItemIndex         
}

