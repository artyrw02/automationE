//USEUNIT ControlFunctions
//USEUNIT General_Functions

//Change to dev mode function
function DevMode(){
  //Enable Dashboard Developer Mode  
  if (!Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea2"]["dockableWindow5"]["Exists"]) {
    Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&Tools|Developer")
  }
}

//Basic deployment for dashboards
// function CreateSimpleDashboards(dashboardID, dashboardCaption, dashDescription, generalOptions, baqQuery, deploymentOptions){
function CreateSimpleDashboards(DashbData){

  NewDashboard(DashbData["dashboardID"],DashbData["dashboardCaption"],DashbData["dashDescription"], DashbData["generalOptions"])
  
  AddQueriesDashboard(DashbData["baqQuery"])
  
  SaveDashboard()
  
  Delay(1000)
  
  DeployDashboard(DashbData["deploymentOptions"])
  
  ExitDashboard()
}

function OpenDashboard(dashboardID) {
  var dashboardPanel = Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]["dockableWindow1"]["pnlGenProps"]
  dashboardPanel["txtDefinitonID"]["Keys"](dashboardID)
  dashboardPanel["txtDefinitonID"]["Keys"]("[Tab]")

  if (Aliases["Epicor"]["dlgWarning"]["Exists"] || Aliases["Epicor"]["ExceptionDialog"]["Exists"]) {
    Log["Error"]("There is a dialog message active.")
  }else{
    Log["Checkpoint"]("Dashboard " + dashboardID + " opened.")
  }
}

function NewDashboard(dashboardID,dashboardCaption,dashDescription, generalOptions){
  //Click New Dashboard
  Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&File|&New...|New Dashboard")
  // ClickMenu("File->New...->New Dashboard")

  //Type Definition, Caption and Description
  var dashboardPanel = Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]["dockableWindow1"]["pnlGenProps"]
  dashboardPanel["txtDefinitonID"]["Keys"](dashboardID)
  dashboardPanel["txtDefinitonID"]["Keys"]("[Tab]")
  
  Delay(1500)
   if(Aliases["Epicor"]["ExceptionDialog"]["Exists"]){    
    var aString = Aliases["Epicor"]["ExceptionDialog"]["exceptionDialogFillPanel"]["rtbMessage"]["Text"]["OleValue"]
    var aSubString = "TestDashBD set for All Companies already exists"
    var Res, flag = true;

    Res = aqString["Find"](aString, aSubString)
    if (Res != -1) {
         Log["Message"]("There are occurrences of '" + aSubString + "' in '" + aString + "'.");
         Aliases["Epicor"]["ExceptionDialog"]["exceptionDialogFillPanel"]["btnOk"]["Click"]()
    }
    else{
        Log["Message"]("There are no occurrences of '" + aSubString + "' in '" + aString + "'.");
    }
  }

  var windowsExceptionDialog = Aliases["Epicor"]["FindAllChildren"]("FullName", "*TestDashBD*", 15)["toArray"]();
  var windowsExceptionDialogBtn = Aliases["Epicor"]["FindAllChildren"]("FullName", "*Button*", 2)["toArray"]();

  if (windowsExceptionDialog[0] != null && windowsExceptionDialogBtn[0] != null || windowsExceptionDialog[0] != undefined && windowsExceptionDialogBtn[0] != undefined) {
    if(windowsExceptionDialog[0]["Exists"]){
      Log["Message"]("Warning - Dashboard: TestA set for All Companies already exists. - Clicked OK on message ")
      windowsExceptionDialogBtn[0]["Click"]()
    }
  }

  dashboardPanel["txtCaption"]["Keys"](dashboardCaption)
  dashboardPanel["txtDescription"]["Keys"](dashDescription)

  if(generalOptions != undefined){
    var arrOptions = generalOptions.split(",")

    for( var i = 0; i <= arrOptions.length - 1 ; i++){
      if(generalOptions == "All Companies"){
        dashboardPanel["chkAllCompanies"]["Checked"] = true
      }else if( generalOptions == "Refresh All"){
        dashboardPanel["chkInhibitRefreshAll"]["Checked"] = true
      }else if(generalOptions == "Mobile"){
        dashboardPanel["chkMobile"]["Checked"] = true
      }
    }
  }
}

function AddQueriesDashboard(baqQuery){
  var arrBaqQueries = baqQuery.split(",")

  for( var i = 0; i <= arrBaqQueries.length - 1 ; i++){
    //Add BAQ
    Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&File|&New...|New Query")
    // ClickMenu("File->New...->New Query")
    Aliases["Epicor"]["DashboardProperties"]["FillPanel"]["QueryPropsPanel"]["WinFormsObject"]("PropertiesPanel_Fill_Panel")["WinFormsObject"]("txtQueryID")["Keys"](arrBaqQueries[i])
    // ClickButton("OK")
    Aliases["Epicor"]["DashboardProperties"]["btnOkay"]["Click"]()
  }
  
  if (Aliases["Epicor"]["dlgWarning"]["Exists"] || Aliases["Epicor"]["ExceptionDialog"]["Exists"]) {
    Log["Error"]("There is a dialog message active.")
  }else{
    Log["Checkpoint"]("Query " + baqQuery + " added.")
  }
}

function SaveDashboard(){
  //Activate 'General' tab
  Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]["dockableWindow1"]["Activate"]()

  //var dashboardCaption =  Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]["dockableWindow1"]["pnlGenProps"]["txtCaption"]["Text"]
  //var dashDescription = Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]["dockableWindow1"]["pnlGenProps"]["txtDescription"]["Text"]
  Delay(1500)

  //Save the Dashboard
  // ClickMenu("File->Save")
  Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&File|&Save")
 
 /* if (Aliases["Epicor"]["ExceptionDialog"]["exceptionDialogFillPanel"]["rtbMessage"]["Exists"]) {
    Log["Message"]("Validated correctly: Cancelling Save operation: Dashboard Description and Caption is required.")
      Aliases["Epicor"]["ExceptionDialog"]["exceptionDialogFillPanel"]["btnOk"]["Click"]()
    }*/
}

function DeployDashboard(deploymentOptions){
  //Deploy Dashboard
  // ClickMenu("Tools->Deploy Dashboard")
  Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&Tools|Deploy Dashboard")

  //Selection the option for the Actions listed
  var arrdeploymentOptions = deploymentOptions.split(",")

  for (var i = 0; i <= arrdeploymentOptions.length - 1; i++) {
    if(arrdeploymentOptions[i] == "Deploy Smart Client"){
      ChangeCheckboxState("chkDeployApplication", true)
    }
    if(arrdeploymentOptions[i] == "Add Menu tab"){
      ChangeCheckboxState("chkAddMenuTab", true)
    }
    if(arrdeploymentOptions[i] == "Add Favorite Item"){
      ChangeCheckboxState("chkAddFavItem", true)
    }
    if(arrdeploymentOptions[i] == "Generate Web Form"){
      ChangeCheckboxState("chkGenWebForm", true)
    }
    if(arrdeploymentOptions[i] == "Generate Mobile App"){
      ChangeCheckboxState("chkGenMobile", true)
    }
    if(arrdeploymentOptions[i] == "Available for Mobile Menu"){
      ChangeCheckboxState("chkMobileMenuAvail", true)
    }
  }

  //Click to deploy
  ClickButton("Deploy")
  // Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["btnOk"]["Click"]()
  Log["Message"]("Clicked deploy button")
  Delay(5000)

  var ActiveWindow = Sys.Desktop.ActiveWindow()

  Delay(1500)
  var textStatus = ActiveWindow["FindChild"](["ClrClassName", "FullName"], ["*TextBox*", "*txtStatus*"], 30)

  Delay(1500)
  var deploymentStatus = findValueInString(textStatus["Text"]["OleValue"], "successfully compiled")
 
  Delay(1500)
  if(deploymentStatus) {
    //Click to close 'Deploy Dashboard' window
    ClickButton("OK")
    Log["Message"]("Dashboard was deployed correctly. Clicked OK button to close Deploy Dashboard window.")
  }else{
    Log["Error"]("There was a problem while deploying the dashboard.")
  }

  if (Aliases["Epicor"]["dlgWarning"]["Exists"] || Aliases["Epicor"]["ExceptionDialog"]["Exists"]) {
    Log["Error"]("There is a dialog message active.")
  }else{
    Log["Checkpoint"]("Dashboard deployed")
  }
}

/* ORIGINAL FUNCTION - OBSOLETE
  function DeployDashboard(deploymentOptions){
    //Deploy Dashboard
    Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&Tools|Deploy Dashboard")
   
    var dashboardCaption =  Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]["dockableWindow1"]["pnlGenProps"]["txtCaption"]["Text"]
    var dashDescription = Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]["dockableWindow1"]["pnlGenProps"]["txtDescription"]["Text"]

    Delay(1500)
    if (dashboardCaption == "" || dashDescription == "") { 
      if (Aliases["Epicor"]["ExceptionDialog"]["exceptionDialogFillPanel"]["rtbMessage"]["Exists"]){
        Log['Message']("Validated correctly: Cancelling AppBuilder operation: Dashboard Description and caption is required.")
        Aliases["Epicor"]["ExceptionDialog"]["exceptionDialogFillPanel"]["btnOk"]["Click"]()
        Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]["dockableWindow1"]["pnlGenProps"]["txtCaption"]["Keys"]("DashB Testing")
        Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]["dockableWindow1"]["pnlGenProps"]["txtDescription"]["Keys"]("DashB Testing")
        //Deploy Dashboard
        Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&Tools|Deploy Dashboard")
      }
    }

    //Selection the option for the Actions listed
    var arrdeploymentOptions = deploymentOptions.split(",")

    for (var i = 0; i <= arrdeploymentOptions.length - 1; i++) {
      if(arrdeploymentOptions[i] == "Deploy Smart Client"){
        Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["grpWinAssembly"]["chkDeployApplication"]["Checked"] = true
      }
      if(arrdeploymentOptions[i] == "Add Menu tab"){
        Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["grpWinAssembly"]["chkAddMenuTab"]["Checked"] = true
      }
      if(arrdeploymentOptions[i] == "Add Favorite Item"){
        Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["grpWinAssembly"]["chkAddFavItem"]["Checked"] = true
      }
      if(arrdeploymentOptions[i] == "Generate Web Form"){
        Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["grpWebAccess"]["chkGenWebForm"]["Checked"] = true
      }
      if(arrdeploymentOptions[i] == "Generate Mobile App"){
        Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["grpMobile"]["chkGenMobile"]["Checked"] = true
      }
      if(arrdeploymentOptions[i] == "Available for Mobile Menu"){
        Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["grpMobile"]["chkMobileMenuAvail"]["Checked"] = true
      }
    }

    //Click to deploy
    Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["btnOk"]["Click"]()
    Log["Message"]("Clicked deploy button")
    Delay(5000)
    
    //Click to close 'Deploy Dashboard' window
    Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["btnOk"]["Click"]()
    Log["Message"]("Clicked OK button to close Deploy Dashboard window")

    if (Aliases["Epicor"]["dlgWarning"]["Exists"] || Aliases["Epicor"]["ExceptionDialog"]["Exists"]) {
      Log["Error"]("There is a dialog message active.")
    }else{
      Log["Checkpoint"]("Dashboard deployed")
    }

  }
*/
function ExitDashboard(){
   if (Aliases["Epicor"]["dlgWarning"]["Exists"] || Aliases["Epicor"]["ExceptionDialog"]["Exists"]) {
    Log["Error"]("There is a dialog message active.")
  }else{
    Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&File|E&xit")
    Log["Checkpoint"]("Exit Dashboard Form")
  }
}

function CloseDashboard(){
  Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&File|Close All")
  // ClickMenu("Close All")
  ClickButton("OK")
  // Aliases["Epicor"]["dlgWarning"]["btnOK"]["Click"]()
}

//Create menu from menu maintenance for dashboards
// function CreateMenu(menuLocation, menuID, menuName, orderSequence, menuType, dll, validations)
function CreateMenu(MenuData){  
  Delay(1000)
  var MenuMFormTree = Aliases["Epicor"]["MenuMForm"]["windowDockingArea2"]["dockableWindow2"]["jobTreeViewPanel"]["methodTree"]  
  var CountElem = MenuMFormTree["SelectedNodes"]["Item"](0)["Nodes"]["Count"]  
 
  var arrMenuLocation = MenuData["menuLocation"].split(">")
  
    for (var i = 1; i <= arrMenuLocation.length; i++) {
      for (var j = 0; j <= CountElem; j++) {
        MenuMFormTree.SelectedNodes.Item(0).Nodes.Item(j).Expanded = true
        if (arrMenuLocation[i] == MenuMFormTree.SelectedNodes.Item(0).Nodes.Item(j).Text){
           MenuMFormTree.ActiveNode = MenuMFormTree.SelectedNodes.Item(0).Nodes.Item(j)
           MenuMFormTree.SelectedNodes.Item(0).Nodes.Item(j).Selected = true
           break
         } 
      }
    }

  //Add New Item
  Aliases["Epicor"]["MenuMForm"]["zSonomaForm_Toolbars_Dock_Area_Top"]["ClickItem"]("Main Menu|&File|New...|New Menu")
  // ClickMenu("File->New...->New Menu")

  //Fill the information
  var MenuFormObject = Aliases["Epicor"]["MenuMForm"]["windowDockingArea1"]["dockableWindow3"]["mainPanel1"]["windowDockingArea1"]["dockableWindow1"]["detailPanel1"]

  MenuFormObject["dbxDetail"]["txtMenuID"]["Keys"](MenuData["menuID"])
  MenuFormObject["dbxDetail"]["txtName"]["Keys"](MenuData["menuName"])
  MenuFormObject["epiGroupBox2"]["nedSeq"]["Keys"](MenuData["orderSequence"])
  MenuFormObject["grpProgramMain"]["cboType"]["Keys"]("[BS][BS][BS][BS][BS][BS][BS][BS][BS]")
  MenuFormObject["grpProgramMain"]["cboType"]["Keys"](MenuData["menuType"])
  
  if (MenuData["menuType"] == "Dashboard-Assembly") {
    MenuFormObject["grpProgramMain"]["cboDashboard"]["Keys"](MenuData["dll"])
    MenuFormObject["grpProgramMain"]["cboDashboard"]["Keys"]("[Tab]")
  }else if (MenuData["menuType"] == "Menu Item") {
    MenuFormObject["grpProgramMain"]["txtProgram"]["Keys"](MenuData["dll"])
    MenuFormObject["grpProgramMain"]["txtProgram"]["Keys"]("[Tab]")
  }
   
  var flag = true

  if(MenuData["validations"] != undefined && MenuData["validations"] != "" && MenuData["validations"] != null){
    var validations = MenuData["validations"].split(",")

    for(var i = 0; i < validations["length"]; i++){
      if(validations[i] != "Web Access"){
        var checkbox = Aliases["Epicor"]["MenuMForm"]["windowDockingArea1"]["dockableWindow3"]["mainPanel1"]["windowDockingArea1"]["dockableWindow1"]["detailPanel1"]["FindAllChildren"]("FullName", "*chk"+"*"+validations[i]+"*", 30)["toArray"]()
        checkbox[0]["Checked"] = true
        Log["Checkpoint"]("Checkbox from menu was selected - " + validations[i])
      }else{
        var webAccess = Aliases["Epicor"]["MenuMForm"]["windowDockingArea1"]["dockableWindow3"]["mainPanel1"]["windowDockingArea1"]["dockableWindow1"]["detailPanel1"]["grpProgramMain"]["eshWebAccess"]["EnabledCaption"]
        if(webAccess == "Available"){
          Log["Checkpoint"]("Web Access  " + validations[i] + " is Available.")
          flag = true
        }else{
          Log["Error"]("Web Access  " + validations[i] + " is not Available.")
          flag =  false
          break
        }
      }
    }
  }
  
  if(flag){
    Aliases["Epicor"]["MenuMForm"]["zSonomaForm_Toolbars_Dock_Area_Top"]["ClickItem"]("Main Menu|&File|&Save")
    Delay(1000)
    Aliases["Epicor"]["MenuMForm"]["Close"]()
    Log["Checkpoint"]("Menu created correctly")
  }else{
    Log["Error"]("There was a problem while creating the menu")
  }
}

//deploy from Dashboard maintenance
/*function DashboardMaintenance(dashboardID, actions){

  Aliases["Epicor"]["DashboardForm"]["windowDockingArea2"]["dockableWindow4"]["mainPanel1"]["windowDockingArea1"]["dockableWindow2"]["detailPanel1"]["groupBox1"]["txtKeyField"]["Keys"](dashboardID)
  Aliases["Epicor"]["DashboardForm"]["windowDockingArea2"]["dockableWindow4"]["mainPanel1"]["windowDockingArea1"]["dockableWindow2"]["detailPanel1"]["groupBox1"]["txtKeyField"]["Keys"]("[Tab]")

  //Selection the option for the Actions listed
  var arrActions = actions.split(",")

  for (var i = 0; i <= arrActions.length - 1; i++) {
    
    Aliases["Epicor"]["DashboardForm"]["zEpiForm_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&Actions|" + arrActions[i])
    Log["Message"]("Action " + arrActions[i] + " was selected.")

    if (arrActions[i] == "Modify Dashboard") {
      Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&File|Copy Dashboard") 
      Aliases["Epicor"]["CopyDashboardForm"]["txtDefinitionId"]["Keys"](dashboardID + "Copy")
      Aliases["Epicor"]["CopyDashboardForm"]["btnOkay"]["Click"]()
      Log["Checkpoint"]("Dashboard was copied correctly.")

      Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["Activate"]()

      Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]["dockableWindow1"]["pnlGenProps"]["chkMobile"]["CheckState"] = "Checked"

      Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&File|&Save")
      Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&Tools|Deploy Dashboard")

      Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["grpMobile"]["chkGenMobile"]["Checked"] = true
      Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["grpMobile"]["chkMobileMenuAvail"]["Checked"] = true
      Aliases["Epicor"]["AppBuilderDeployDialog"]["deployOptionsPanel1"]["btnOk"]["Click"]()
      Log["Checkpoint"]("Copied Dashboard was deployed correctly.")

      Delay(5000)
      Aliases["Epicor"]["AppBuilderDeployDialog"]["Close"]()
      Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&File|E&xit")
    }
    else {
      if( arrActions[i] == "Deploy UI Application" ){
        Log["Message"]("Action Deploy UI Application")
      }
    }
  }
    Aliases["Epicor"]["DashboardForm"]["zEpiForm_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&File|E&xit")  
}*/
  
function OpenDashboardFavMenu(DashboardID) {
  // var DashboardID = "DashBBAQ"
  Aliases["Epicor"]["MenuForm"]["windowDockingArea1"]["dockableWindow2"]["shortcutBar"]["ClickItem"]("Dashboard Assemblies", DashboardID);

}

//MODIFY-remove
function DashboardQueryProperties(tab){
    var queryProperties = Aliases["Epicor"]["DashboardProperties"]["FillPanel"]["QueryPropsPanel"]["PropertiesPanel_Fill_Panel"]["tcQueryProps"]

    for (var i = 0; i <= queryProperties["Tabs"]["VisibleTabsCount"] -1; i++) {
      if (queryProperties["Tabs"]["Item_2"](i)["Text"] == tab) {
          queryProperties["ActiveTab"] = queryProperties["Tabs"]["Item_2"](i)
          queryProperties["Focus"]()
          queryProperties["Keys"]("[Enter]")
      }
    }
}

function DashboardPropertiesTabs(dashboardPropsPanel, tab){
    // var queryProperties = Aliases["Epicor"]["DashboardProperties"]["FillPanel"]["QueryPropsPanel"]["PropertiesPanel_Fill_Panel"]["tcQueryProps"]
    for (var i = 0; i <= dashboardPropsPanel["Tabs"]["VisibleTabsCount"] -1; i++) {
      if (dashboardPropsPanel["Tabs"]["Item_2"](i)["Text"] == tab) {
          dashboardPropsPanel["ActiveTab"] = dashboardPropsPanel["Tabs"]["Item_2"](i)
          dashboardPropsPanel["Focus"]()
          dashboardPropsPanel["Keys"]("[Enter]")
      }
    }
}

function DeleteDashboard(dashboardIDs) {
  var DashboardFormDefinition = Aliases["Epicor"]["Dashboard"]["dbPanel"]["windowDockingArea1"]["dockableWindow2"]["pnlGeneral"]["windowDockingArea1"]

  DashboardFormDefinition["dockableWindow1"]["Activate"]()
  var dashboardIDtext = DashboardFormDefinition["dockableWindow1"]["pnlGenProps"]["txtDefinitonID"]

  //Split string dashboardIDs into an array  
  var arrDashboards

  arrDashboards = dashboardIDs.split(",")
  
  for (var i = 0; i < arrDashboards["length"] ; i++) {
    if (dashboardIDtext["Text"]["OleValue"] != arrDashboards[i] && dashboardIDtext["Text"]["OleValue"] != "") {
      Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[1]|Clear") 
      if(Aliases["Epicor"]["dlgWarning"]["Exists"]){
        //Click 'Yes' to confirm 
        Aliases["Epicor"]["dlgWarning"]["btnOK"]["Click"]()  
      }
      Log["Message"](dashboardIDtext["Text"] + " was cleared.")
    }

    if (dashboardIDtext["Text"]["OleValue"] == "") {
      //Retrieve BAQ
      dashboardIDtext["Keys"](arrDashboards[i])
      dashboardIDtext["Keys"]("[Tab]")
      DashboardFormDefinition["dockableWindow1"]["Activate"]()

      if(Aliases["Epicor"]["EpiCheckMessageBox"]["Exists"]){
        if(Aliases["Epicor"]["EpiCheckMessageBox"]["groupBox1"]["lblMessageText"]["Text"] == "Record not found.  Add new?"){
          Aliases["Epicor"]["EpiCheckMessageBox"]["groupBox1"]["pnlYesNo"]["btnNo2"]["Click"]()
          Log["Message"]("BAQ not found.")
        }      
      }else{
        Log["Message"](arrDashboards[i] + " was loaded.")
      }
    }

    if (dashboardIDtext["Text"]["OleValue"] == arrDashboards[i]) {
      Aliases["Epicor"]["Dashboard"]["dbPanel"]["zDashboardPanel_Toolbars_Dock_Area_Top"]["ClickItem"]("[0]|&File|Delete Dashboard Definition") 

      if(Aliases["Epicor"]["dlgWarning"]["Exists"]){
        //Click 'Yes' to confirm 
        Aliases["Epicor"]["dlgWarning"]["btnOK"]["Click"]()  
      }

      Log["Message"](arrDashboards[i] + " was deleted.")

      //Retrieve BAQ for validation
      dashboardIDtext["Keys"](arrDashboards[i])
      dashboardIDtext["Keys"]("[Tab]")

      if(Aliases["Epicor"]["EpiCheckMessageBox"]["Exists"]){
        if(Aliases["Epicor"]["EpiCheckMessageBox"]["groupBox1"]["lblMessageText"]["Text"] == "Record not found.  Add new?"){
          Log["Checkpoint"](arrDashboards[i] + " was deleted correctly.")
          Aliases["Epicor"]["EpiCheckMessageBox"]["groupBox1"]["pnlYesNo"]["btnNo2"]["Click"]()
        }      
      }else{
        Log["Message"](arrDashboards[i] + " was not deleted.")
      }
    }
  }
}


